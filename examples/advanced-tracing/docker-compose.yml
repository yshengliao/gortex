version: '3.8'

services:
  # Gortex application
  app:
    build: .
    ports:
      - "8083:8083"
    environment:
      - DATABASE_URL=postgres://gortex:gortex@postgres:5432/gortex?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - LOG_LEVEL=debug
    depends_on:
      - postgres
      - redis
      - jaeger
    networks:
      - gortex-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: gortex
      POSTGRES_PASSWORD: gortex
      POSTGRES_DB: gortex
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gortex-network

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - gortex-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # Jaeger UI
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - gortex-network

  # Load generator for testing
  load-generator:
    build:
      context: .
      dockerfile: Dockerfile.load
    depends_on:
      - app
    environment:
      - TARGET_URL=http://app:8083
      - DURATION=60s
      - RATE=10
    networks:
      - gortex-network
    profiles:
      - load-test

volumes:
  postgres-data:
  redis-data:

networks:
  gortex-network:
    driver: bridge