version: '3.8'

services:
  app:
    build: .
    ports:
      - "8084:8084"
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - LOG_LEVEL=info
    depends_on:
      - prometheus
    networks:
      - monitoring
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=8084"
      - "prometheus.io/path=/metrics"

  prometheus:
    image: prom/prometheus:v2.47.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - monitoring

  # Load generator for demo purposes
  load-generator:
    build:
      context: .
      dockerfile: Dockerfile.loadgen
    depends_on:
      - app
    networks:
      - monitoring
    profiles:
      - load-test
    environment:
      - TARGET_URL=http://app:8084
      - DURATION=60s
      - RATE=20

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge